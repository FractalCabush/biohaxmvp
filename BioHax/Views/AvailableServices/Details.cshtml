@model BioHax.Models.AvailableService
@using BioHax.Authorization;


@{
    ViewData["Title"] = "Details";
}

<h2>Details</h2>
<h3>@Html.DisplayFor(model => model.Provider)</h3>
<div>
    <h4>@Html.DisplayFor(model => model.Type)</h4>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.Provider)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Provider)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Type)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Type)
        </dd>
		<dt>
			@Html.DisplayNameFor(model => model.Description)
		</dt>
		<dd>
			@Html.DisplayFor(model => model.Description)
		</dd>
    </dl>
</div>
@if (Model.Status != ServiceStatus.Approved)
{
	@if (await AuthorizationService.AuthorizeAsync(User, Model, ServiceOperations.Approve))
	{
		<form asp-action="SetStatus" asp-controller="AvailableServices" style="display:inline;">
			<input type="hidden" name="id" value="@Model.ServiceId" />
			<input type="hidden" name="status" value="@ServiceStatus.Approved" />
			<button type="submit" class="btn btn-xs btn-success">Approve</button>
		</form>
	}
}
@if (Model.Status != ServiceStatus.Rejected)
{
	@if (await AuthorizationService.AuthorizeAsync(User, Model, ServiceOperations.Reject))
	{
		<form asp-action="SetStatus" asp-controller="AvailableServices" style="display:inline;">
			<input type="hidden" name="id" value="@Model.ServiceId" />
			<input type="hidden" name="status" value="@ServiceStatus.Rejected" />
			<button type="submit" class="btn btn-xs btn-danger">Reject</button>
		</form>
	}
}
<div>
	@if (await AuthorizationService.AuthorizeAsync(User, Model, ServiceOperations.Update))
	{
		<a asp-action="Edit" asp-route-id="@Model.ServiceId">Edit</a> <text>|</text>
	}
    <a asp-action="Available">Back to List</a>
</div>
